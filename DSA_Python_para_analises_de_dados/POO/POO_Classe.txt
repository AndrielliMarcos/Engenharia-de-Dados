** Classes **
Em POO, uma classe é uma estrutura que descreve um objeto, especificando os atributos e comportamentos que o objeto deve ter.
Uma classe é uma epécie de modelo que defone as características e ações que um objeto deve possuir.

As classe são usadas para criar objetos, que são instâncias da classe. Cada objeto criado a partir
da mesma classe terá os memsos atributos e comportamentos.

Para criar uma classe em Python, utiliza-se a palavra reservada class.

O nome da classe segue a mesma conversão de nomes para criação de funções e variáveis em Python, mesma
normalmente se usa a primeira letra maiúscula em cada palavra no nome da classe.

** Métodos **
Em Python, os métodos de classes são funções definidas dentro de uma classe, que realizam operações
específicas em objetos criados a partir dessa classe. Os métodos de classe são usados para implementar
o comportamento dos objetos que pertencem a essa classe.

Assim como as funções em Python, os métodos de classes podem, receber argumentos e retornar calores.
No entanto, diferentemente das funções normais, os métodos da classe sempre incluem o parâmetro self
como o primeiro argumento, que é usado para se referir ao objeto atual da classe.

O método __init__ é um método especial que é chamado quando um objeto é criado a partir da classe.
Este método é usado para inicializar os atributos do objeto. Outros métodos podem ser definidos para
executar tarefas específicas em um objeto, como calcular valores, realizar operações de entrada e saída,
ou alterar o estado do objeto.


** Método Construtor**
É um tipo especial de método que é CHAMADO AUTOMATICAMENTE QUANDO UM OBJETO DE UMA CLASSE É CRIADO.
Ele DEFINE OS VALORES INICIAIS DE SEUS ATRIBUTOS.
Segue um exemplo:

class Pessoa:
    # método construtor
    def __init__(self, nome, idade):
        self.nome = nome
        self.idade = idade

# Criar um objeto da classe Pessoa utilizando o método construtor
pessoa1 = Pessoa("João", 30)

# Acessar os atributos do objeto
print("Nome:", pessoa1.nome)
print("Idade:", pessoa1.idade)

Quando um objeto pessoa1 é criado, o método construtor é automaticamente chamado e inicializa 
os atributos nome e idade com os valores passados como argumentos.

** Herança **
Em POO, a herança é um conceito que permite criar novas classes a partir de outras classes existentes,
aproveitando os atributos e métodos da classe original e adicionando novos atributos e métodos específicos.

A classe original é chamada de classe mãe ou superclasse e a nova classe criada é chamada de classe filha ou subclasse.

A herança é uma técnica importante em POO porque permite reutilizar o código de maneira eficaz.
Em vez de criar uma nova classe do zero, a subclasse pode herdar todos os atributos e métodos da superclasse eficaz e 
adicionar apenas o necessário. Dessa forma, a subclasse pode se concentrar em fornecer funcionalidades
adicionais sem precisar se preocupar com as características básicas da classe.

Na herança, uma subclasse pode herdar os atributos e métodos da superclasse e substituí-los
ou estendê-los conforme necessário. Por exemplo, uma subclasse pode ter um método com o mesmo nome
de um método da superclasse, mas com um comportamento diferente.

** Polimorfismo **
Permite que onjetos de diferentes classes possam ser tratados de forma uniforme. Isso significa
que o objeto pode ser tratado como se fosse um objeto de uma superclasse, mesmo que ele seja de uma subclasse.

Mais especificamente, o polimorfismo se refere à habilidade de um objeto responder de diferentes
formas a uma mesma mensagem. Isso é possível porque as subclasses podem implementar métodos com o mesmo
nome que os métodos da superclasse, mas com comportamentos diferentes.

Com o polimorfismo, os mesmos atributos e métodos podem ser utilizados em objetos distintos, com
implementações lógicas diferentes.

